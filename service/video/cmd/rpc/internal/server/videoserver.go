// Code generated by goctl. DO NOT EDIT!
// Source: video.proto

package server

import (
	"context"

	"recorder/service/video/cmd/rpc/internal/logic"
	"recorder/service/video/cmd/rpc/internal/svc"
	"recorder/service/video/cmd/rpc/video"
)

type VideoServer struct {
	svcCtx *svc.ServiceContext
}

func NewVideoServer(svcCtx *svc.ServiceContext) *VideoServer {
	return &VideoServer{
		svcCtx: svcCtx,
	}
}

func (s *VideoServer) Uploading(ctx context.Context, in *video.UploadingReq) (*video.UploadingResp, error) {
	l := logic.NewUploadingLogic(ctx, s.svcCtx)
	return l.Uploading(in)
}

func (s *VideoServer) Uploaded(ctx context.Context, in *video.UploadedReq) (*video.UploadedResp, error) {
	l := logic.NewUploadedLogic(ctx, s.svcCtx)
	return l.Uploaded(in)
}

func (s *VideoServer) GetVideoList(ctx context.Context, in *video.GetVideoListReq) (*video.GetVideoListResp, error) {
	l := logic.NewGetVideoListLogic(ctx, s.svcCtx)
	return l.GetVideoList(in)
}

func (s *VideoServer) GetOne(ctx context.Context, in *video.GetOneReq) (*video.GetOneResp, error) {
	l := logic.NewGetOneLogic(ctx, s.svcCtx)
	return l.GetOne(in)
}

func (s *VideoServer) Delete(ctx context.Context, in *video.DeleteReq) (*video.DeleteResp, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}
